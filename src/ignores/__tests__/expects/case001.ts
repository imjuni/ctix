/* eslint-disable max-len */
import * as env from '@testenv/env';
import { posixJoin } from '@tools/misc';

export default {
  git: {
    _rules: [
      {
        origin: posixJoin(env.exampleType04Path, '/logs').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/logs').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.log').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.log').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/npm-debug.log*').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/npm-debug.log*').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/yarn-debug.log*').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/yarn-debug.log*').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/yarn-error.log*').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/yarn-error.log*').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/lerna-debug.log*').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/lerna-debug.log*').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json').slice(
          1,
        ),
        pattern: posixJoin(env.exampleType04Path, '/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json').slice(
          1,
        ),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/pids').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/pids').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.pid').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.pid').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.seed').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.seed').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.pid.lock').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.pid.lock').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/lib-cov').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/lib-cov').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/coverage').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/coverage').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.lcov').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.lcov').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.nyc_output').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.nyc_output').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.grunt').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.grunt').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/bower_components').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/bower_components').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.lock-wscript').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.lock-wscript').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/build/Release').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/build/Release').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/node_modules/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/node_modules/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/jspm_packages/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/jspm_packages/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/typings/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/typings/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.tsbuildinfo').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.tsbuildinfo').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.npm').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.npm').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.eslintcache').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.eslintcache').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.rpt2_cache/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.rpt2_cache/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.rts2_cache_cjs/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_cjs/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.rts2_cache_es/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_es/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.rts2_cache_umd/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_umd/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.node_repl_history').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.node_repl_history').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/*.tgz').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/*.tgz').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.yarn-integrity').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.yarn-integrity').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.env').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.env').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.env.test').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.env.test').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.cache').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.cache').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.next').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.next').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.nuxt').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.nuxt').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/dist').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/dist').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.cache/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.cache/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.vuepress/dist').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.vuepress/dist').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.serverless/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.serverless/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.fusebox/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.fusebox/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.dynamodb/').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.dynamodb/').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/.tern-port').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/.tern-port').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/fast-maker/**').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/fast-maker/**').slice(1),
        negative: false,
        regex: {},
      },
    ],
    _ignoreCase: true,
    _allowRelativePaths: false,
    _ignoreCache: {},
    _testCache: {},
    _added: true,
  },
  cti: {
    _rules: [
      {
        origin: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
        negative: false,
        regex: {},
      },
      {
        origin: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
        pattern: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
        negative: false,
        regex: {},
      },
    ],
    _ignoreCase: true,
    _allowRelativePaths: false,
    _ignoreCache: {},
    _testCache: {},
    _added: true,
  },
  npm: [],
  data: {
    git: {
      parsed: {
        sections: [
          {
            name: 'Logs',
            comment: '# Logs',
            patterns: [
              'logs',
              '*.log',
              'npm-debug.log*',
              'yarn-debug.log*',
              'yarn-error.log*',
              'lerna-debug.log*',
            ],
          },
          {
            name: 'Diagnostic reports (https://nodejs.org/api/report.html)',
            comment: '# Diagnostic reports (https://nodejs.org/api/report.html)',
            patterns: ['report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json'],
          },
          {
            name: 'Runtime data',
            comment: '# Runtime data',
            patterns: ['pids', '*.pid', '*.seed', '*.pid.lock'],
          },
          {
            name: 'Directory for instrumented libs generated by jscoverage/JSCover',
            comment: '# Directory for instrumented libs generated by jscoverage/JSCover',
            patterns: ['lib-cov'],
          },
          {
            name: 'Coverage directory used by tools like istanbul',
            comment: '# Coverage directory used by tools like istanbul',
            patterns: ['coverage', '*.lcov'],
          },
          {
            name: 'nyc test coverage',
            comment: '# nyc test coverage',
            patterns: ['.nyc_output'],
          },
          {
            name: 'Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)',
            comment:
              '# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)',
            patterns: ['.grunt'],
          },
          {
            name: 'Bower dependency directory (https://bower.io/)',
            comment: '# Bower dependency directory (https://bower.io/)',
            patterns: ['bower_components'],
          },
          {
            name: 'node-waf configuration',
            comment: '# node-waf configuration',
            patterns: ['.lock-wscript'],
          },
          {
            name: 'Compiled binary addons (https://nodejs.org/api/addons.html)',
            comment: '# Compiled binary addons (https://nodejs.org/api/addons.html)',
            patterns: ['build/Release'],
          },
          {
            name: 'Dependency directories',
            comment: '# Dependency directories',
            patterns: ['node_modules/', 'jspm_packages/'],
          },
          {
            name: 'TypeScript v1 declaration files',
            comment: '# TypeScript v1 declaration files',
            patterns: ['typings/'],
          },
          {
            name: 'TypeScript cache',
            comment: '# TypeScript cache',
            patterns: ['*.tsbuildinfo'],
          },
          {
            name: 'Optional npm cache directory',
            comment: '# Optional npm cache directory',
            patterns: ['.npm'],
          },
          {
            name: 'Optional eslint cache',
            comment: '# Optional eslint cache',
            patterns: ['.eslintcache'],
          },
          {
            name: 'Microbundle cache',
            comment: '# Microbundle cache',
            patterns: ['.rpt2_cache/', '.rts2_cache_cjs/', '.rts2_cache_es/', '.rts2_cache_umd/'],
          },
          {
            name: 'Optional REPL history',
            comment: '# Optional REPL history',
            patterns: ['.node_repl_history'],
          },
          {
            name: "Output of 'npm pack'",
            comment: "# Output of 'npm pack'",
            patterns: ['*.tgz'],
          },
          {
            name: 'Yarn Integrity file',
            comment: '# Yarn Integrity file',
            patterns: ['.yarn-integrity'],
          },
          {
            name: 'dotenv environment variables file',
            comment: '# dotenv environment variables file',
            patterns: ['.env', '.env.test'],
          },
          {
            name: 'parcel-bundler cache (https://parceljs.org/)',
            comment: '# parcel-bundler cache (https://parceljs.org/)',
            patterns: ['.cache'],
          },
          {
            name: 'Next.js build output',
            comment: '# Next.js build output',
            patterns: ['.next'],
          },
          {
            name: 'Nuxt.js build / generate output',
            comment: '# Nuxt.js build / generate output',
            patterns: ['.nuxt', 'dist'],
          },
          {
            name: 'Gatsby files',
            comment: '# Gatsby files',
            patterns: ['.cache/'],
          },
          {
            name: 'Comment in the public line in if your project uses Gatsby and *not* Next.js\nhttps://nextjs.org/blog/next-9-1#public-directory-support\npublic',
            comment:
              '# Comment in the public line in if your project uses Gatsby and *not* Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public',
            patterns: [],
          },
          {
            name: 'vuepress build output',
            comment: '# vuepress build output',
            patterns: ['.vuepress/dist'],
          },
          {
            name: 'Serverless directories',
            comment: '# Serverless directories',
            patterns: ['.serverless/'],
          },
          {
            name: 'FuseBox cache',
            comment: '# FuseBox cache',
            patterns: ['.fusebox/'],
          },
          {
            name: 'DynamoDB Local files',
            comment: '# DynamoDB Local files',
            patterns: ['.dynamodb/'],
          },
          {
            name: 'TernJS port file',
            comment: '# TernJS port file',
            patterns: ['.tern-port', 'fast-maker/**'],
          },
        ],
        patterns: [
          'logs',
          '*.log',
          'npm-debug.log*',
          'yarn-debug.log*',
          'yarn-error.log*',
          'lerna-debug.log*',
          'report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',
          'pids',
          '*.pid',
          '*.seed',
          '*.pid.lock',
          'lib-cov',
          'coverage',
          '*.lcov',
          '.nyc_output',
          '.grunt',
          'bower_components',
          '.lock-wscript',
          'build/Release',
          'node_modules/',
          'jspm_packages/',
          'typings/',
          '*.tsbuildinfo',
          '.npm',
          '.eslintcache',
          '.rpt2_cache/',
          '.rts2_cache_cjs/',
          '.rts2_cache_es/',
          '.rts2_cache_umd/',
          '.node_repl_history',
          '*.tgz',
          '.yarn-integrity',
          '.env',
          '.env.test',
          '.cache',
          '.next',
          '.nuxt',
          'dist',
          '.cache/',
          '.vuepress/dist',
          '.serverless/',
          '.fusebox/',
          '.dynamodb/',
          '.tern-port',
          'fast-maker/**',
        ],
        input: {
          type: 'Buffer',
          data: [
            35, 32, 76, 111, 103, 115, 10, 108, 111, 103, 115, 10, 42, 46, 108, 111, 103, 10, 110,
            112, 109, 45, 100, 101, 98, 117, 103, 46, 108, 111, 103, 42, 10, 121, 97, 114, 110, 45,
            100, 101, 98, 117, 103, 46, 108, 111, 103, 42, 10, 121, 97, 114, 110, 45, 101, 114, 114,
            111, 114, 46, 108, 111, 103, 42, 10, 108, 101, 114, 110, 97, 45, 100, 101, 98, 117, 103,
            46, 108, 111, 103, 42, 10, 10, 35, 32, 68, 105, 97, 103, 110, 111, 115, 116, 105, 99,
            32, 114, 101, 112, 111, 114, 116, 115, 32, 40, 104, 116, 116, 112, 115, 58, 47, 47, 110,
            111, 100, 101, 106, 115, 46, 111, 114, 103, 47, 97, 112, 105, 47, 114, 101, 112, 111,
            114, 116, 46, 104, 116, 109, 108, 41, 10, 114, 101, 112, 111, 114, 116, 46, 91, 48, 45,
            57, 93, 42, 46, 91, 48, 45, 57, 93, 42, 46, 91, 48, 45, 57, 93, 42, 46, 91, 48, 45, 57,
            93, 42, 46, 106, 115, 111, 110, 10, 10, 35, 32, 82, 117, 110, 116, 105, 109, 101, 32,
            100, 97, 116, 97, 10, 112, 105, 100, 115, 10, 42, 46, 112, 105, 100, 10, 42, 46, 115,
            101, 101, 100, 10, 42, 46, 112, 105, 100, 46, 108, 111, 99, 107, 10, 10, 35, 32, 68,
            105, 114, 101, 99, 116, 111, 114, 121, 32, 102, 111, 114, 32, 105, 110, 115, 116, 114,
            117, 109, 101, 110, 116, 101, 100, 32, 108, 105, 98, 115, 32, 103, 101, 110, 101, 114,
            97, 116, 101, 100, 32, 98, 121, 32, 106, 115, 99, 111, 118, 101, 114, 97, 103, 101, 47,
            74, 83, 67, 111, 118, 101, 114, 10, 108, 105, 98, 45, 99, 111, 118, 10, 10, 35, 32, 67,
            111, 118, 101, 114, 97, 103, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32,
            117, 115, 101, 100, 32, 98, 121, 32, 116, 111, 111, 108, 115, 32, 108, 105, 107, 101,
            32, 105, 115, 116, 97, 110, 98, 117, 108, 10, 99, 111, 118, 101, 114, 97, 103, 101, 10,
            42, 46, 108, 99, 111, 118, 10, 10, 35, 32, 110, 121, 99, 32, 116, 101, 115, 116, 32, 99,
            111, 118, 101, 114, 97, 103, 101, 10, 46, 110, 121, 99, 95, 111, 117, 116, 112, 117,
            116, 10, 10, 35, 32, 71, 114, 117, 110, 116, 32, 105, 110, 116, 101, 114, 109, 101, 100,
            105, 97, 116, 101, 32, 115, 116, 111, 114, 97, 103, 101, 32, 40, 104, 116, 116, 112,
            115, 58, 47, 47, 103, 114, 117, 110, 116, 106, 115, 46, 99, 111, 109, 47, 99, 114, 101,
            97, 116, 105, 110, 103, 45, 112, 108, 117, 103, 105, 110, 115, 35, 115, 116, 111, 114,
            105, 110, 103, 45, 116, 97, 115, 107, 45, 102, 105, 108, 101, 115, 41, 10, 46, 103, 114,
            117, 110, 116, 10, 10, 35, 32, 66, 111, 119, 101, 114, 32, 100, 101, 112, 101, 110, 100,
            101, 110, 99, 121, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 32, 40, 104, 116,
            116, 112, 115, 58, 47, 47, 98, 111, 119, 101, 114, 46, 105, 111, 47, 41, 10, 98, 111,
            119, 101, 114, 95, 99, 111, 109, 112, 111, 110, 101, 110, 116, 115, 10, 10, 35, 32, 110,
            111, 100, 101, 45, 119, 97, 102, 32, 99, 111, 110, 102, 105, 103, 117, 114, 97, 116,
            105, 111, 110, 10, 46, 108, 111, 99, 107, 45, 119, 115, 99, 114, 105, 112, 116, 10, 10,
            35, 32, 67, 111, 109, 112, 105, 108, 101, 100, 32, 98, 105, 110, 97, 114, 121, 32, 97,
            100, 100, 111, 110, 115, 32, 40, 104, 116, 116, 112, 115, 58, 47, 47, 110, 111, 100,
            101, 106, 115, 46, 111, 114, 103, 47, 97, 112, 105, 47, 97, 100, 100, 111, 110, 115, 46,
            104, 116, 109, 108, 41, 10, 98, 117, 105, 108, 100, 47, 82, 101, 108, 101, 97, 115, 101,
            10, 10, 35, 32, 68, 101, 112, 101, 110, 100, 101, 110, 99, 121, 32, 100, 105, 114, 101,
            99, 116, 111, 114, 105, 101, 115, 10, 110, 111, 100, 101, 95, 109, 111, 100, 117, 108,
            101, 115, 47, 10, 106, 115, 112, 109, 95, 112, 97, 99, 107, 97, 103, 101, 115, 47, 10,
            10, 35, 32, 84, 121, 112, 101, 83, 99, 114, 105, 112, 116, 32, 118, 49, 32, 100, 101,
            99, 108, 97, 114, 97, 116, 105, 111, 110, 32, 102, 105, 108, 101, 115, 10, 116, 121,
            112, 105, 110, 103, 115, 47, 10, 10, 35, 32, 84, 121, 112, 101, 83, 99, 114, 105, 112,
            116, 32, 99, 97, 99, 104, 101, 10, 42, 46, 116, 115, 98, 117, 105, 108, 100, 105, 110,
            102, 111, 10, 10, 35, 32, 79, 112, 116, 105, 111, 110, 97, 108, 32, 110, 112, 109, 32,
            99, 97, 99, 104, 101, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 10, 46, 110, 112,
            109, 10, 10, 35, 32, 79, 112, 116, 105, 111, 110, 97, 108, 32, 101, 115, 108, 105, 110,
            116, 32, 99, 97, 99, 104, 101, 10, 46, 101, 115, 108, 105, 110, 116, 99, 97, 99, 104,
            101, 10, 10, 35, 32, 77, 105, 99, 114, 111, 98, 117, 110, 100, 108, 101, 32, 99, 97, 99,
            104, 101, 10, 46, 114, 112, 116, 50, 95, 99, 97, 99, 104, 101, 47, 10, 46, 114, 116,
            115, 50, 95, 99, 97, 99, 104, 101, 95, 99, 106, 115, 47, 10, 46, 114, 116, 115, 50, 95,
            99, 97, 99, 104, 101, 95, 101, 115, 47, 10, 46, 114, 116, 115, 50, 95, 99, 97, 99, 104,
            101, 95, 117, 109, 100, 47, 10, 10, 35, 32, 79, 112, 116, 105, 111, 110, 97, 108, 32,
            82, 69, 80, 76, 32, 104, 105, 115, 116, 111, 114, 121, 10, 46, 110, 111, 100, 101, 95,
            114, 101, 112, 108, 95, 104, 105, 115, 116, 111, 114, 121, 10, 10, 35, 32, 79, 117, 116,
            112, 117, 116, 32, 111, 102, 32, 39, 110, 112, 109, 32, 112, 97, 99, 107, 39, 10, 42,
            46, 116, 103, 122, 10, 10, 35, 32, 89, 97, 114, 110, 32, 73, 110, 116, 101, 103, 114,
            105, 116, 121, 32, 102, 105, 108, 101, 10, 46, 121, 97, 114, 110, 45, 105, 110, 116,
            101, 103, 114, 105, 116, 121, 10, 10, 35, 32, 100, 111, 116, 101, 110, 118, 32, 101,
            110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 32, 118, 97, 114, 105, 97, 98, 108,
            101, 115, 32, 102, 105, 108, 101, 10, 46, 101, 110, 118, 10, 46, 101, 110, 118, 46, 116,
            101, 115, 116, 10, 10, 35, 32, 112, 97, 114, 99, 101, 108, 45, 98, 117, 110, 100, 108,
            101, 114, 32, 99, 97, 99, 104, 101, 32, 40, 104, 116, 116, 112, 115, 58, 47, 47, 112,
            97, 114, 99, 101, 108, 106, 115, 46, 111, 114, 103, 47, 41, 10, 46, 99, 97, 99, 104,
            101, 10, 10, 35, 32, 78, 101, 120, 116, 46, 106, 115, 32, 98, 117, 105, 108, 100, 32,
            111, 117, 116, 112, 117, 116, 10, 46, 110, 101, 120, 116, 10, 10, 35, 32, 78, 117, 120,
            116, 46, 106, 115, 32, 98, 117, 105, 108, 100, 32, 47, 32, 103, 101, 110, 101, 114, 97,
            116, 101, 32, 111, 117, 116, 112, 117, 116, 10, 46, 110, 117, 120, 116, 10, 100, 105,
            115, 116, 10, 10, 35, 32, 71, 97, 116, 115, 98, 121, 32, 102, 105, 108, 101, 115, 10,
            46, 99, 97, 99, 104, 101, 47, 10, 35, 32, 67, 111, 109, 109, 101, 110, 116, 32, 105,
            110, 32, 116, 104, 101, 32, 112, 117, 98, 108, 105, 99, 32, 108, 105, 110, 101, 32, 105,
            110, 32, 105, 102, 32, 121, 111, 117, 114, 32, 112, 114, 111, 106, 101, 99, 116, 32,
            117, 115, 101, 115, 32, 71, 97, 116, 115, 98, 121, 32, 97, 110, 100, 32, 42, 110, 111,
            116, 42, 32, 78, 101, 120, 116, 46, 106, 115, 10, 35, 32, 104, 116, 116, 112, 115, 58,
            47, 47, 110, 101, 120, 116, 106, 115, 46, 111, 114, 103, 47, 98, 108, 111, 103, 47, 110,
            101, 120, 116, 45, 57, 45, 49, 35, 112, 117, 98, 108, 105, 99, 45, 100, 105, 114, 101,
            99, 116, 111, 114, 121, 45, 115, 117, 112, 112, 111, 114, 116, 10, 35, 32, 112, 117, 98,
            108, 105, 99, 10, 10, 35, 32, 118, 117, 101, 112, 114, 101, 115, 115, 32, 98, 117, 105,
            108, 100, 32, 111, 117, 116, 112, 117, 116, 10, 46, 118, 117, 101, 112, 114, 101, 115,
            115, 47, 100, 105, 115, 116, 10, 10, 35, 32, 83, 101, 114, 118, 101, 114, 108, 101, 115,
            115, 32, 100, 105, 114, 101, 99, 116, 111, 114, 105, 101, 115, 10, 46, 115, 101, 114,
            118, 101, 114, 108, 101, 115, 115, 47, 10, 10, 35, 32, 70, 117, 115, 101, 66, 111, 120,
            32, 99, 97, 99, 104, 101, 10, 46, 102, 117, 115, 101, 98, 111, 120, 47, 10, 10, 35, 32,
            68, 121, 110, 97, 109, 111, 68, 66, 32, 76, 111, 99, 97, 108, 32, 102, 105, 108, 101,
            115, 10, 46, 100, 121, 110, 97, 109, 111, 100, 98, 47, 10, 10, 35, 32, 84, 101, 114,
            110, 74, 83, 32, 112, 111, 114, 116, 32, 102, 105, 108, 101, 10, 46, 116, 101, 114, 110,
            45, 112, 111, 114, 116, 10, 10, 102, 97, 115, 116, 45, 109, 97, 107, 101, 114, 47, 42,
            42, 10,
          ],
        },
      },
      patterns: [
        'logs',
        '*.log',
        'npm-debug.log*',
        'yarn-debug.log*',
        'yarn-error.log*',
        'lerna-debug.log*',
        'report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',
        'pids',
        '*.pid',
        '*.seed',
        '*.pid.lock',
        'lib-cov',
        'coverage',
        '*.lcov',
        '.nyc_output',
        '.grunt',
        'bower_components',
        '.lock-wscript',
        'build/Release',
        'node_modules/',
        'jspm_packages/',
        'typings/',
        '*.tsbuildinfo',
        '.npm',
        '.eslintcache',
        '.rpt2_cache/',
        '.rts2_cache_cjs/',
        '.rts2_cache_es/',
        '.rts2_cache_umd/',
        '.node_repl_history',
        '*.tgz',
        '.yarn-integrity',
        '.env',
        '.env.test',
        '.cache',
        '.next',
        '.nuxt',
        'dist',
        '.cache/',
        '.vuepress/dist',
        '.serverless/',
        '.fusebox/',
        '.dynamodb/',
        '.tern-port',
        'fast-maker/**',
      ],
      ignore: {
        _rules: [
          {
            origin: posixJoin(env.exampleType04Path, '/logs').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/logs').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.log').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.log').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/npm-debug.log*').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/npm-debug.log*').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/yarn-debug.log*').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/yarn-debug.log*').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/yarn-error.log*').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/yarn-error.log*').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/lerna-debug.log*').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/lerna-debug.log*').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(
              env.exampleType04Path,
              '/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',
            ).slice(1),
            pattern: posixJoin(
              env.exampleType04Path,
              '/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json',
            ).slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/pids').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/pids').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.pid').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.pid').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.seed').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.seed').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.pid.lock').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.pid.lock').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/lib-cov').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/lib-cov').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/coverage').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/coverage').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.lcov').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.lcov').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.nyc_output').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.nyc_output').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.grunt').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.grunt').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/bower_components').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/bower_components').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.lock-wscript').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.lock-wscript').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/build/Release').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/build/Release').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/node_modules/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/node_modules/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/jspm_packages/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/jspm_packages/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/typings/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/typings/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.tsbuildinfo').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.tsbuildinfo').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.npm').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.npm').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.eslintcache').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.eslintcache').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.rpt2_cache/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.rpt2_cache/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.rts2_cache_cjs/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_cjs/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.rts2_cache_es/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_es/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.rts2_cache_umd/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.rts2_cache_umd/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.node_repl_history').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.node_repl_history').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/*.tgz').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/*.tgz').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.yarn-integrity').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.yarn-integrity').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.env').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.env').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.env.test').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.env.test').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.cache').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.cache').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.next').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.next').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.nuxt').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.nuxt').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/dist').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/dist').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.cache/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.cache/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.vuepress/dist').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.vuepress/dist').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.serverless/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.serverless/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.fusebox/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.fusebox/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.dynamodb/').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.dynamodb/').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/.tern-port').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/.tern-port').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/fast-maker/**').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/fast-maker/**').slice(1),
            negative: false,
            regex: {},
          },
        ],
        _ignoreCase: true,
        _allowRelativePaths: false,
        _ignoreCache: {},
        _testCache: {},
        _added: true,
      },
    },
    cti: {
      origin: {
        'juvenile/**': '*',
        'wellmade/FlakyCls.ts': '*',
        'wellmade/WhisperingCls.ts': '*',
        'wellmade/ChildlikeCls.ts': ['transfer', 'stomach'],
      },
      ignore: {
        _rules: [
          {
            origin: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
            negative: false,
            regex: {},
          },
          {
            origin: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
            pattern: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
            negative: false,
            regex: {},
          },
        ],
        _ignoreCase: true,
        _allowRelativePaths: false,
        _ignoreCache: {},
        _testCache: {},
        _added: true,
      },
      withValue: [
        {
          type: 'wildcard',
          ignore: {
            _rules: [
              {
                origin: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
                pattern: posixJoin(env.exampleType04Path, '/juvenile/**').slice(1),
                negative: false,
                regex: {},
              },
            ],
            _ignoreCase: true,
            _allowRelativePaths: false,
            _ignoreCache: {},
            _testCache: {},
            _added: true,
          },
          filePath: 'juvenile/**',
          pattern: '*',
        },
        {
          type: 'wildcard',
          ignore: {
            _rules: [
              {
                origin: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
                pattern: posixJoin(env.exampleType04Path, '/wellmade/FlakyCls.ts').slice(1),
                negative: false,
                regex: {},
              },
            ],
            _ignoreCase: true,
            _allowRelativePaths: false,
            _ignoreCache: {},
            _testCache: {},
            _added: true,
          },
          filePath: 'wellmade/FlakyCls.ts',
          pattern: '*',
        },
        {
          type: 'wildcard',
          ignore: {
            _rules: [
              {
                origin: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
                pattern: posixJoin(env.exampleType04Path, '/wellmade/WhisperingCls.ts').slice(1),
                negative: false,
                regex: {},
              },
            ],
            _ignoreCase: true,
            _allowRelativePaths: false,
            _ignoreCache: {},
            _testCache: {},
            _added: true,
          },
          filePath: 'wellmade/WhisperingCls.ts',
          pattern: '*',
        },
        {
          type: 'pattern',
          ignore: {
            _rules: [
              {
                origin: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
                pattern: posixJoin(env.exampleType04Path, '/wellmade/ChildlikeCls.ts').slice(1),
                negative: false,
                regex: {},
              },
            ],
            _ignoreCase: true,
            _allowRelativePaths: false,
            _ignoreCache: {},
            _testCache: {},
            _added: true,
          },
          filePath: 'wellmade/ChildlikeCls.ts',
          pattern: ['transfer', 'stomach'],
          patternMatcher: {
            _rules: [
              {
                origin: 'transfer',
                pattern: 'transfer',
                negative: false,
                regex: {},
              },
              {
                origin: 'stomach',
                pattern: 'stomach',
                negative: false,
                regex: {},
              },
            ],
            _ignoreCase: true,
            _allowRelativePaths: false,
            _ignoreCache: {},
            _testCache: {},
            _added: true,
          },
        },
      ],
    },
    npm: {
      patterns: [],
      origin: [],
    },
  },
};
